name: CI (seeds)
DISABLED
on:
  push:
  workflow_dispatch:

jobs:
  install-deps:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.7.1"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.python-version }}-${{ matrix.poetry-version }}-${{ matrix.os }}-deps-${{ github.head_ref || github.run_id }}
      cancel-in-progress: true
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - uses: abatilo/actions-poetry@v3
      with:
        poetry-version: ${{ matrix.poetry-version }}
    - name: Setup a local virtual environment
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
    - uses: actions/cache@v4
      name: Define a cache for the virtual environment based
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}-${{ matrix.python-version }}-${{ matrix.poetry-version }}-${{ matrix.os }}-annotate-errors=${{ matrix.annotate-errors }}
    - name: Install the project dependencies
      run: poetry install ${{ matrix.poetry-install-extra-args }}

  seeds:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.7.1"]
        os: [ubuntu-latest]
        seeds: ["4810,32382"]
    needs: install-deps
    runs-on: ${{ matrix.os }}
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.python-version }}-${{ matrix.poetry-version }}-${{ matrix.os }}-deps-${{ github.head_ref || github.run_id }}
      cancel-in-progress: true
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - uses: abatilo/actions-poetry@v3
      with:
        poetry-version: ${{ matrix.poetry-version }}
    - name: Setup a local virtual environment
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
    - uses: actions/cache@v4
      name: Define a cache for the virtual environment based
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}-${{ matrix.python-version }}-${{ matrix.poetry-version }}-${{ matrix.os }}-annotate-errors=${{ matrix.annotate-errors }}
    - name: Install the project dependencies
      run: poetry install ${{ matrix.poetry-install-extra-args }}
    - run: poetry run wandb login --anonymously
    - run: timeout 5h poetry run python notebooks_jason/max_of_4_all_models.py -j1 --seeds ${{ matrix.seeds }}
    - run: tar -czvf seeds-${{ matrix.seeds }}.tar.gz notebooks_jason/.cache/max_of_4.py.*-{${{ matrix.seeds }}}_*
      if: always ()
    - name: upload seeds ${{ matrix.seeds }}
      uses: actions/upload-artifact@v4
      with:
        name: cache-${{ matrix.seeds }}
        path: seeds-${{ matrix.seeds }}.tar.gz
      if: always ()
